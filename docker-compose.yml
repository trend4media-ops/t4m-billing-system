version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: trend4media-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: trend4media_db
      POSTGRES_USER: trend4media_user
      POSTGRES_PASSWORD: trend4media_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trend4media-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trend4media_user -d trend4media_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: trend4media-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: trend4media_user
      DB_PASSWORD: trend4media_password
      DB_NAME: trend4media_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      ADMIN_EMAIL: admin@trend4media.com
      ADMIN_PASSWORD: AdminPassword123!
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 10485760
    volumes:
      - ./uploads:/usr/src/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - trend4media-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/auth/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: trend4media-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - trend4media-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  trend4media-network:
    driver: bridge 